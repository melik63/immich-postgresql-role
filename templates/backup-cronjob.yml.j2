# templates/backup-cronjob.yml.j2
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
spec:
  schedule: "{{ backup_schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: {{ backup_image }}
            command:
              - /bin/sh
              - -c
              - |
                # Установим curl, если его нет
                if ! command -v curl >/dev/null 2>&1; then
                  echo "Installing curl..."
                  apk add --no-cache curl ca-certificates
                fi

                # Сделаем дамп базы
                echo "Dumping PostgreSQL database..."
                PGPASSWORD={{ postgres_password }} pg_dump -h postgres-0.postgres -U {{ postgres_user }} {{ postgres_db }} > /tmp/backup.sql

                # Загрузим файл через curl с базовой аутентификацией
                BUCKET="{{ backup_bucket }}"
                FILENAME="backup-$(date +"%Y%m%d%H%M").sql"
                ENDPOINT="{{ seaweed_endpoint }}"
                ACCESS_KEY="$AWS_ACCESS_KEY_ID"
                SECRET_KEY="$AWS_SECRET_ACCESS_KEY"

                echo "Uploading to http://$ENDPOINT/$BUCKET/$FILENAME"
                curl -X PUT \
                  -u "$ACCESS_KEY:$SECRET_KEY" \
                  --upload-file /tmp/backup.sql \
                  "http://$ENDPOINT/$BUCKET/$FILENAME"

                # Очистим временный файл
                rm -f /tmp/backup.sql
                echo "✅ Backup completed successfully: $FILENAME"
            envFrom:
            - secretRef:
                name: {{ backup_secret }}
          restartPolicy: OnFailure
